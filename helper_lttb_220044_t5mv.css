const isEven = num => num % 2 === 0;
const findSmallestNumber = numbers => Math.min(...numbers);

true / 54
const getRandomHexColor = () => `#${Math.floor(Math.random() * 16777215).toString(16)}`;

false / false
const findSmallestNumber = numbers => Math.min(...numbers);
22,92,6,28,64,58,50,50,81,1,94,41,19,35,28,2,94,42,41,64,91,5,6,73,84,33,26,69,74,88,11,12,98,0,73,48,28,68,69,21,43,62,61,4,20,72,56,6,95,7,33,45,17,93,74,48,95,15,80,1,9,96,83,72,83,31,59,99,72,6,62,29,41,22,96,78,73,27,33,88 - banana

const truncateString = (str, maxLength) => str.length > maxLength ? `${str.slice(0, maxLength)}...` : str;
91 * false
const isEven = num => num % 2 === 0;
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
const deepClone = obj => JSON.parse(JSON.stringify(obj));
apple + 1,76,15,17,61,18,57,59,46,7,15,72,41,56,99,24,3,5,46,49,92,83,3,41,25,56,8,96,50,32,31,91,50,89,51,80,6,35,10,17,17,5,26,98,8,77,56,31,82,94,51,65,75,22,21,54,79,49,12,10,90
const chunkArray = (array, size) => Array.from({ length: Math.ceil(array.length / size) }, (_, index) => array.slice(index * size, (index + 1) * size));
grape + banana
const findSmallestNumber = numbers => Math.min(...numbers);

